import React, { useState, useEffect, useRef } from 'react';

const AIChatCalculator = () => {
  const [messages, setMessages] = useState([
    {
      id: 1,
      type: 'ai',
      content: 'Salam! M…ôn Aisel, sizin layih…ô m…ôsl…ôh…ôt√ßiniz…ôm. üíú F…ôrqind…ôsiniz layih…ô m…ôs…ôl…ôl…ôrinizi h…ôll t…ômin ed…ôc…ôm v…ô m√ºk…ômm…ôl bir h…ôll tapƒ±b.\n\nLayih…ôniz haqqƒ±nda d…ôqiq m…ôlumat verm…ôk ist…ôyir…ôm. N…ô √º√ß√ºn …ôsas sifari≈üinizi layih…ô, e-ticar…ôt platformasƒ±, mobil t…ôtbiq v…ô ya …ôtraflƒ±q bir ≈üey?\n\nBunu siz…ô t…ôkmaya hansƒ± k√∂m…ôk ed…ôc…ôk!'
    }
  ]);
  
  const [currentInput, setCurrentInput] = useState('');
  const [isTyping, setIsTyping] = useState(false);
  const [selectedProject, setSelectedProject] = useState('');
  const [showQuestions, setShowQuestions] = useState(true);
  const [projectDetails, setProjectDetails] = useState({});
  const messagesEndRef = useRef(null);

  const quickQuestions = [
    '10 m…ôhsul s…ôt √º√ß√ºn bir e-ticar…ôt saytƒ± ist…ôyir…ôm',
    'M√º≈üt…ôril…ôr √º√ß√ºn rezervasya sistemi olan restoran saytƒ±na ehtiyacƒ±m var',
    'Xidm…ôtl…ôr √º√ß√ºn g√∂mr√ºk sayt √º√ß√ºn layih…ô m…ôsl…ôh…ôtl…ôr lazƒ±mdƒ±r',
    'Yeni biznes √º√ß√ºn sayt v…ô veb saytƒ± …ôhtiyyacƒ±m var'
  ];

  const projectTypes = [
    { id: 'website', name: 'Veb Sayt', price: '‚Çº 400+', icon: 'üåê' },
    { id: 'ecommerce', name: 'E-ticar…ôt', price: '‚Çº 1200+', icon: 'üõí' },
    { id: 'mobile', name: 'Mobil T…ôtbiq', price: '‚Çº 2500+', icon: 'üì±' },
    { id: 'system', name: 'X√ºsusi Sistem', price: '‚Çº 5500+', icon: '‚öôÔ∏è' }
  ];

  const features = [
    { icon: 'ü§ñ', title: 'AI-g√ºcl√º Qiymatlandƒ±rma', desc: 'D…ôqiq qiym…ôt t…ôxminl…ôri √º√ß√ºn qabaqcƒ±l AI' },
    { icon: '‚ö°', title: 'Ani Cavablar', desc: 'S√ºr…ôtliy…ô …ôsas…ôn qiym…ôt hesablarƒ± alƒ±n' },
    { icon: 'üíé', title: 'F…ôrdi T√∂vsiy…ôl…ôr', desc: 'Ehtiyaclarƒ±nƒ±za uyƒüunla≈üdƒ±rma h…ôll…ôr' },
    { icon: 'üéØ', title: 'Tam ≈û…ôffaflƒ±q', desc: 'Aydƒ±n qiym…ôm…ô n…ôql v…ô …ôvv…ôl veril…ôn h…ôr ≈üey' }
  ];

  const aiResponses = {
    website: {
      message: "∆èla se√ßim! üåê Veb sayt √º√ß√ºn bir ne√ß…ô sual:\n\n‚Ä¢ Ne√ß…ô s…ôhif…ôy…ô ehtiyacƒ±nƒ±z var?\n‚Ä¢ X√ºsusi dizayn ist…ôyirsiniz, yoxsa template il…ô ba≈ülayaq?\n‚Ä¢ ƒ∞dar…ôetm…ô paneli (CMS) lazƒ±mdƒ±r?\n‚Ä¢ SEO optimalla≈üdƒ±rmasƒ± v…ô Google Analytics …ôlav…ô ed…ôk?",
      basePrice: 400
    },
    ecommerce: {
      message: "E-ticar…ôt saytƒ± - √ßox yax≈üƒ±! üõí M…ôhsullarƒ±nƒ±z haqqƒ±nda:\n\n‚Ä¢ Ne√ß…ô m…ôhsulunuz olacaq?\n‚Ä¢ √ñd…ôni≈ü sisteml…ôri (kart, PayPal, bank k√∂√ß√ºrm…ôsi)?\n‚Ä¢ √áatdƒ±rƒ±lma hesablamalarƒ± lazƒ±mdƒ±r?\n‚Ä¢ Stok idar…ôetm…ôsi v…ô analitika ist…ôyirsiniz?",
      basePrice: 1200
    },
    mobile: {
      message: "Mobil t…ôtbiq - m√∂ht…ô≈ü…ôm layih…ô! üì± Detallar:\n\n‚Ä¢ Android, iOS, yoxsa h…ôr ikisi?\n‚Ä¢ Push bildiri≈ül…ôr v…ô offline rejim?\n‚Ä¢ ƒ∞stifad…ô√ßi hesablarƒ± v…ô sosial media giri≈üi?\n‚Ä¢ App Store v…ô Google Play y√ºkl…ôm…ô d…ôst…ôyi?",
      basePrice: 2500
    },
    system: {
      message: "X√ºsusi sistem - kompleks v…ô maraqlƒ±! ‚öôÔ∏è Sistem haqqƒ±nda:\n\n‚Ä¢ Hansƒ± n√∂v m…ôlumat i≈ül…ôn…ôc…ôk?\n‚Ä¢ ƒ∞stifad…ô√ßi rollarƒ± v…ô icaz…ôl…ôr sistemi?\n‚Ä¢ Xarici API inteqrasiyalarƒ± lazƒ±mdƒ±r?\n‚Ä¢ Y√ºks…ôk t…ôhl√ºk…ôsizlik v…ô backup sisteml…ôri?",
      basePrice: 5500
    }
  };

  const scrollToBottom = () => {
    messagesEndRef.current?.scrollIntoView({ behavior: "smooth" });
  };

  useEffect(() => {
    scrollToBottom();
  }, [messages]);

  const addMessage = (type, content) => {
    const newMessage = {
      id: messages.length + 1,
      type,
      content,
      timestamp: new Date()
    };
    setMessages(prev => [...prev, newMessage]);
  };

  const handleQuickQuestion = (question) => {
    addMessage('user', question);
    setShowQuestions(false);
    
    setTimeout(() => {
      setIsTyping(true);
      setTimeout(() => {
        setIsTyping(false);
        addMessage('ai', 'T…ô≈ü…ôkk√ºr edir…ôm! Bu √ßox faydalƒ± m…ôlumatdƒ±r. üòä\n\nƒ∞ndi layih…ônizin n√∂v√ºn√º m√º…ôyy…ônl…ô≈üdir…ôk. A≈üaƒüƒ±dakƒ± se√ßiml…ôrd…ôn birini se√ßin v…ô daha …ôtraflƒ± danƒ±≈üaq:');
        setShowQuestions(true);
      }, 1500);
    }, 500);
  };

  const handleProjectSelect = (projectId) => {
    const project = projectTypes.find(p => p.id === projectId);
    setSelectedProject(projectId);
    addMessage('user', `${project.name} se√ßdim`);
    
    setTimeout(() => {
      setIsTyping(true);
      setTimeout(() => {
        setIsTyping(false);
        const response = aiResponses[projectId];
        addMessage('ai', response.message);
        setProjectDetails({ type: projectId, basePrice: response.basePrice });
      }, 1500);
    }, 500);
  };

  const handleSendMessage = () => {
    if (currentInput.trim()) {
      addMessage('user', currentInput);
      setCurrentInput('');
      
      setTimeout(() => {
        setIsTyping(true);
        setTimeout(() => {
          setIsTyping(false);
          
          const responses = [
            '√áox yax≈üƒ± m…ôlumatlar! üëç Bu …ôsasda qiym…ôt hesablayƒ±ram...',
            'M√ºk…ômm…ôl! Bu detallar layih…ônizi daha da aydƒ±nla≈üdƒ±rƒ±r. üí°',
            '∆èla! ƒ∞ndi daha d…ôqiq qiym…ôt hesablaya bil…ôr…ôm. üìä',
            'T…ô≈ü…ôkk√ºr edir…ôm, bu m…ôlumatlar √ßox d…ôy…ôrlidir! ‚ú®'
          ];
          
          const randomResponse = responses[Math.floor(Math.random() * responses.length)];
          addMessage('ai', randomResponse);
        }, 1500);
      }, 500);
    }
  };

  const handleKeyPress = (e) => {
    if (e.key === 'Enter') {
      handleSendMessage();
    }
  };

  return (
    <div className="min-h-screen bg-gradient-to-b from-slate-900 via-purple-900 to-slate-900 text-white">
      <div className="max-w-7xl mx-auto px-4 py-8">
        {/* Header */}
        <div className="text-center mb-8">
          <h1 className="text-4xl md:text-5xl font-bold mb-4">
            Aisel il…ô S√∂hb…ôt - <span className="text-purple-400">Layih…ô M…ôsl…ôh…ôt√ßiniz</span>
          </h1>
          <p className="text-slate-300 text-lg mb-6">
            F…ôrdl…ô≈üdirilmi≈ü layih…ô t√∂vsiy…ôl…ôri v…ô ani qiym…ôt t…ôxminl…ôri alƒ±n
          </p>
          
          <button className="bg-gradient-to-r from-purple-600 to-pink-600 px-6 py-3 rounded-full font-semibold">
            üìä Manual Kalkulyatordan ƒ∞stifad…ô Et
          </button>
        </div>

        <div className="grid lg:grid-cols-3 gap-8">
          {/* Chat Interface */}
          <div className="lg:col-span-2">
            <div className="bg-slate-800/50 backdrop-blur rounded-2xl border border-slate-700 h-[600px] flex flex-col">
              
              {/* Chat Header */}
              <div className="flex items-center p-4 border-b border-slate-700">
                <div className="w-10 h-10 bg-gradient-to-r from-purple-600 to-pink-600 rounded-full flex items-center justify-center mr-3">
                  ü§ñ
                </div>
                <div>
                  <h3 className="font-semibold">Aisel k√∂m…ôy…ô hazƒ±rdƒ±r</h3>
                  <p className="text-sm text-slate-400">G…ôl…ôn k√∂yl…ôm…ô suallarƒ±nƒ±zƒ± √∂z…ôl v…ô m√ºk…ômm…ôl h…ôll tapaq</p>
                </div>
              </div>

              {/* Messages */}
              <div className="flex-1 overflow-y-auto p-4 space-y-4">
                {messages.map((message) => (
                  <div key={message.id} className={`flex ${message.type === 'user' ? 'justify-end' : 'justify-start'}`}>
                    <div className={`max-w-[80%] p-3 rounded-2xl ${
                      message.type === 'user' 
                        ? 'bg-gradient-to-r from-purple-600 to-pink-600 text-white' 
                        : 'bg-slate-700/50 text-white'
                    }`}>
                      <p className="whitespace-pre-line">{message.content}</p>
                    </div>
                  </div>
                ))}
                
                {isTyping && (
                  <div className="flex justify-start">
                    <div className="bg-slate-700/50 p-3 rounded-2xl">
                      <div className="flex space-x-1">
                        <div className="w-2 h-2 bg-purple-400 rounded-full animate-bounce"></div>
                        <div className="w-2 h-2 bg-purple-400 rounded-full animate-bounce" style={{animationDelay: '0.1s'}}></div>
                        <div className="w-2 h-2 bg-purple-400 rounded-full animate-bounce" style={{animationDelay: '0.2s'}}></div>
                      </div>
                    </div>
                  </div>
                )}
                <div ref={messagesEndRef} />
              </div>

              {/* Quick Actions */}
              {showQuestions && messages.length === 1 && (
                <div className="p-4 border-t border-slate-700">
                  <p className="text-sm text-slate-400 mb-3">T√∂vsiy…ô olunan suallar:</p>
                  <div className="space-y-2">
                    {quickQuestions.map((question, index) => (
                      <button
                        key={index}
                        onClick={() => handleQuickQuestion(question)}
                        className="w-full text-left p-2 text-sm bg-slate-700/30 hover:bg-slate-600/30 rounded-lg transition-colors"
                      >
                        {question}
                      </button>
                    ))}
                  </div>
                </div>
              )}

              {/* Input */}
              <div className="p-4 border-t border-slate-700">
                <div className="flex space-x-2">
                  <input
                    type="text"
                    value={currentInput}
                    onChange={(e) => setCurrentInput(e.target.value)}
                    onKeyPress={handleKeyPress}
                    placeholder="Layih…ônizi t…ôsvir edin... m…ôs…ôl…ôn, '√ñd…ôni≈ü inteqrasiyasƒ± olan e-ticar…ôt saytƒ±na ehtiyacƒ±m var'"
                    className="flex-1 bg-slate-700/50 border border-slate-600 rounded-xl px-4 py-3 text-white placeholder-slate-400 focus:outline-none focus:border-purple-500"
                  />
                  <button 
                    onClick={handleSendMessage}
                    className="bg-gradient-to-r from-purple-600 to-pink-600 px-6 py-3 rounded-xl font-semibold hover:opacity-90 transition-opacity"
                  >
                    G√∂nd…ôr
                  </button>
                </div>
              </div>
            </div>
          </div>

          {/* Right Sidebar */}
          <div className="space-y-6">
            {/* Current Services */}
            <div className="bg-slate-800/50 backdrop-blur rounded-2xl p-6 border border-slate-700">
              <h3 className="text-xl font-bold mb-4 flex items-center">
                <span className="mr-2">üí°</span>
                N…ôz…ô ƒ∞st…ôyir
              </h3>
              <div className="space-y-3 text-sm text-slate-300">
                <div className="flex items-center">
                  <span className="w-2 h-2 bg-green-400 rounded-full mr-3"></span>
                  Layih…ô ehtiyaclarƒ±nƒ±zƒ± Aisel il…ô b√∂l√º≈ü√ºn
                </div>
                <div className="flex items-center">
                  <span className="w-2 h-2 bg-green-400 rounded-full mr-3"></span>
                  Aisel siz…ô uyƒüun suallar ver…ôc…ôk
                </div>
                <div className="flex items-center">
                  <span className="w-2 h-2 bg-green-400 rounded-full mr-3"></span>
                  F…ôrdl…ô≈üdirilmi≈ü t√∂vsiy…ôl…ôr alƒ±n
                </div>
                <div className="flex items-center">
                  <span className="w-2 h-2 bg-green-400 rounded-full mr-3"></span>
                  Ani v…ô doƒüru qiym…ôt t…ôxmini il…ô edin
                </div>
              </div>
            </div>

            {/* Available Services */}
            <div className="bg-slate-800/50 backdrop-blur rounded-2xl p-6 border border-slate-700">
              <h3 className="text-xl font-bold mb-4 flex items-center">
                <span className="mr-2">üõ†Ô∏è</span>
                M√∂vcud Xidm…ôtl…ôr
              </h3>
              <div className="space-y-3">
                {projectTypes.map(project => (
                  <div
                    key={project.id}
                    onClick={() => handleProjectSelect(project.id)}
                    className={`p-3 rounded-lg border cursor-pointer transition-all ${
                      selectedProject === project.id
                        ? 'border-purple-500 bg-purple-600/20'
                        : 'border-slate-600 bg-slate-700/30 hover:border-slate-500'
                    }`}
                  >
                    <div className="flex items-center justify-between">
                      <div className="flex items-center">
                        <span className="text-xl mr-3">{project.icon}</span>
                        <span className="font-semibold">{project.name}</span>
                      </div>
                      <span className="text-green-400 font-bold text-sm">{project.price}</span>
                    </div>
                  </div>
                ))}
              </div>
            </div>

            {/* Contact */}
            <div className="bg-slate-800/50 backdrop-blur rounded-2xl p-6 border border-slate-700">
              <h3 className="text-xl font-bold mb-4 flex items-center">
                <span className="mr-2">üìû</span>
                Yardƒ±ma Ehtiyacƒ±nƒ±z Var?
              </h3>
              <p className="text-slate-300 text-sm mb-4">
                Ekspert komandamƒ±zla s…ôrb…ôst konsultasiya h…ôzirl…ôr
              </p>
              <button className="w-full bg-green-500 hover:bg-green-600 py-3 rounded-xl font-semibold flex items-center justify-center transition-colors">
                <span className="mr-2">üí¨</span>
                WhatsApp
              </button>
            </div>
          </div>
        </div>

        {/* Bottom Features */}
        <div className="grid md:grid-cols-4 gap-6 mt-12">
          {features.map((feature, index) => (
            <div key={index} className="bg-slate-800/30 backdrop-blur rounded-xl p-6 border border-slate-700 text-center">
              <div className="text-3xl mb-3">{feature.icon}</div>
              <h3 className="font-bold text-lg mb-2">{feature.title}</h3>
              <p className="text-slate-400 text-sm">{feature.desc}</p>
            </div>
          ))}
        </div>
      </div>

      {/* WhatsApp Button */}
      <div className="fixed bottom-6 right-6 z-50">
        <button className="bg-green-500 hover:bg-green-600 w-14 h-14 rounded-full flex items-center justify-center text-white text-2xl shadow-lg transition-colors">
          üí¨
        </button>
      </div>
    </div>
  );
};

export default AIChatCalculator;